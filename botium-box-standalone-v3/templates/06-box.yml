apiVersion: apps/v1
kind: Deployment
metadata:
  name: box
  labels:
    name: box
    app: botium-box
    tier: frontend
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: box
      app: botium-box
  template:
    metadata:
      labels:
        name: box
        app: botium-box
        tier: frontend
    spec:
      initContainers:
        - name: box-chmod-er
          image: busybox:latest
          command:
          - /bin/chown
          - -R
          - "1000:1000"
          - /app/server/storage
          volumeMounts:
          - mountPath: "/app/server/storage"
            name: storage
          - mountPath: "/app/server/storage/botiumwork"
            name: storage-botiumwork
      containers:
        - name: box
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-standalone:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-standalone:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "npm run deploy && npm run \"start_$BOTIUMBOX_AGENT_COUNT\""]
          ports:
            - name: box-4000
              containerPort: 4000
          volumeMounts:
          - mountPath: "/app/server/storage"
            name: storage
          - mountPath: "/app/server/storage/botiumwork"
            name: storage-botiumwork
          env:
            - name: DEBUG
              value: botium*
            - name: TESTSETDIR
              value: /app/server/storage/testsets
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: BOTIUM_TEMPDIR
              value: /app/server/storage/botiumwork
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: LICENSE_KEY
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: DATABASE_URL
            - name: SEED_ADMIN_EMAIL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SEED_ADMIN_EMAIL
            - name: SEED_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SEED_PASSWORD
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
            - name: BOTIUMBOX_AGENT_COUNT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_AGENT_COUNT
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_HOST
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_PORT
            {{- if .Values.SMTP_SECURE }}
            - name: SMTP_SECURE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_SECURE
            {{- end }}
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_USER
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_PASSWORD
            {{- if .Values.ACTIVATE_ZAP }}
            - name: ZAP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: ZAP_ENDPOINT
            {{- end }}
            - name: COACH_WORKER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: COACH_WORKER_ENDPOINT
            - name: COACH_WORKER_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: COACH_WORKER_APIKEY
            - name: SPEECH_PROCESSING_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SPEECH_PROCESSING_ENDPOINT
            - name: SPEECH_PROCESSING_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SPEECH_PROCESSING_APIKEY
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: JWT_SECRET
            - name: JWT_EXPIRY_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: JWT_EXPIRY_MINUTES
            - name: BOTIUMBOX_SMARTLOOK_KEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_SMARTLOOK_KEY
            - name: BOTIUMBOX_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_SENTRY_DSN
            - name: BOTIUMBOX_PASSPORT_STRATEGY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_PASSPORT_STRATEGY
            - name: BOTIUMBOX_PASSPORT_ADMINPASSWORD_HASH
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_PASSPORT_ADMINPASSWORD_HASH
            - name: BOTIUMBOX_ADMIN_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_ADMIN_APIKEY
            - name: GOOGLE_TRANSLATE_CLIENT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: GOOGLE_TRANSLATE_CLIENT_EMAIL
            - name: GOOGLE_TRANSLATE_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: GOOGLE_TRANSLATE_PRIVATE_KEY
            - name: OPENAI_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: OPENAI_APIKEY
            - name: OPENAI_RATE_BY_MINUTE
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: OPENAI_RATE_BY_MINUTE
            - name: BOTIUMBOX_LOG_JSON
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_LOG_JSON
            - name: BOTIUMBOX_AUDIT_URL
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_AUDIT_URL
            - name: BOTIUMBOX_AUDIT_CLIENTID
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_AUDIT_CLIENTID
            - name: BOTIUMBOX_FQDN
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_FQDN                
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: botium-box-storage
        - name: storage-botiumwork
          emptyDir: {}
{{- if .Values.INSTALL_SHELL }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: box-shell
  labels:
    name: box-shell
    app: botium-box
    tier: frontend
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: box-shell
      app: botium-box
  template:
    metadata:
      labels:
        name: box-shell
        app: botium-box
        tier: frontend
    spec:
      containers:
        - name: box
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-standalone:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-standalone:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "echo 'cd /app/server/' > /root/.bashrc && cd /app/server && while :; do echo 'Press <CTRL+C> to exit.'; sleep 10; done"]
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
          - mountPath: "/app/server/storage"
            name: storage
          env:
            - name: DEBUG
              value: botium*
            - name: TESTSETDIR
              value: /app/server/storage/testsets
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: LICENSE_KEY
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: DATABASE_URL
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX

      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: botium-box-storage
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: box
spec:
  ports:
    - port: 4000
      targetPort: 4000
      protocol: TCP
  selector:
    name: box
    app: botium-box
{{- if .Values.INSTALL_INGRESS }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: box-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    rancher.io/globalDNS.hostname: {{ .Values.FQDN }}
    cert-manager.io/cluster-issuer: {{ .Values.FQDN }}-letsencrypt-prod
    nginx.ingress.kubernetes.io/server-snippet: |
      ssl_stapling on;
      ssl_stapling_verify on;
spec:
  tls:
  - hosts:
    - {{ .Values.FQDN }}
    secretName: {{ .Values.FQDN }}.botiumbox-tls
  rules:
  - host: {{ .Values.FQDN }}
    http:
      paths:
      - path: /
        backend:
          serviceName: box
          servicePort: 4000
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: {{ .Values.FQDN }}-letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.LETS_ENCRYPT_EMAIL }}
    privateKeySecretRef:
      name: {{ .Values.FQDN }}-letsencrypt-prod
    solvers:
    - selector: {}
      http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: {{ .Values.FQDN }}.botiumbox
spec:
  secretName: {{ .Values.FQDN }}.botiumbox-tls
  issuerRef:
    name: {{ .Values.FQDN }}-letsencrypt-prod
    kind: Issuer
  commonName: {{ .Values.FQDN }}
  dnsNames:
  - {{ .Values.FQDN }}
{{- end }}

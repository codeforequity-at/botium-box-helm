apiVersion: apps/v1
kind: Deployment
metadata:
  name: coach-worker
  labels:
    name: coach-worker
    app: botium-coach-worker
    tier: frontend
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: coach-worker
      app: botium-coach-worker
      tier: frontend
  template:
    metadata:
      labels:
        name: coach-worker
        app: botium-coach-worker
        tier: frontend
    spec:
      containers:
        - name: coach-worker
          resources:
            requests:
              memory: "2Gi"
            limits:
              memory: "3Gi"
          image: botium/botium-coach-worker:{{ .Values.BOTIUM_COACH_WORKER_VERSION }}
          imagePullPolicy: Always
          ports:
            - name: worker-8080
              containerPort: 8080
          env:
            - name: AUTH_APIKEYS
              valueFrom:
                secretKeyRef:
                  name: botium-coach-worker-secrets
                  key: AUTH_APIKEYS
            - name: WEB_CONCURRENCY
              valueFrom:
                configMapKeyRef:
                  name: botium-coach-worker-configmap
                  key: WEB_CONCURRENCY
            - name: COACH_PARALLEL_WORKERS
              valueFrom:
                configMapKeyRef:
                  name: botium-coach-worker-configmap
                  key: COACH_PARALLEL_WORKERS
            - name: COACH_MAX_CALCULATIONS_PER_WORKER
              valueFrom:
                configMapKeyRef:
                  name: botium-coach-worker-configmap
                  key: COACH_MAX_CALCULATIONS_PER_WORKER
            - name: COACH_MAX_UTTERANCES_FOR_EMBEDDINGS
              valueFrom:
                configMapKeyRef:
                  name: botium-coach-worker-configmap
                  key: COACH_MAX_UTTERANCES_FOR_EMBEDDINGS
            - name: COACH_HOSTNAME
              value: coach-worker
---
apiVersion: v1
kind: Service
metadata:
  name: coach-worker
spec:
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    name: coach-worker
    app: botium-coach-worker
{{- if .Values.INSTALL_INGRESS }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: coach-worker-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
    rancher.io/globalDNS.hostname: {{ .Values.FQDN }}
    cert-manager.io/cluster-issuer: {{ .Values.FQDN }}-letsencrypt-prod
spec:
  tls:
  - hosts:
    - {{ .Values.FQDN }}
    secretName: {{ .Values.FQDN }}.coach-worker-tls  
  rules:
  - host: {{ .Values.FQDN }}
    http:
      paths:
      - path: /
        backend:
          serviceName: coach-worker
          servicePort: 8080
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: {{ .Values.FQDN }}-letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.LETS_ENCRYPT_EMAIL }}
    privateKeySecretRef:
      name: {{ .Values.FQDN }}-letsencrypt-prod
    solvers:
    - selector: {}
      http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: {{ .Values.FQDN }}.coach-worker
spec:
  secretName: {{ .Values.FQDN }}.coach-worker-tls
  issuerRef:
    name: {{ .Values.FQDN }}-letsencrypt-prod
    kind: Issuer
  commonName: {{ .Values.FQDN }}
  dnsNames:
  - {{ .Values.FQDN }}
{{- end }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: box-agent
  labels:
    name: box-agent
    app: botium-box
    tier: frontend
spec:
  serviceName: "box-agent"
  replicas: {{ .Values.AGENT_COUNT }}
  selector:
    matchLabels:
      name: box-agent
  template:
    metadata:
      labels:
        name: box-agent
        app: botium-box
        tier: frontend
    spec:
      {{- if .Values.ENABLE_AGENT_NODESELECTION}}
      nodeSelector:
        box-agent-type: common
      {{- end }}
      initContainers:
        - name: box-agent-chmod-er
          image: busybox:latest
          command:
          - /bin/chown
          - -R
          - "1000:1000"
          - /app/agent/storage
          volumeMounts:
          - mountPath: "/app/agent/storage"
            name: botium-box-storage
      containers:
        - name: box-agent
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "./wait.sh -t $WAIT_TIMEOUT -e $BOTIUMBOX_QUEUE_REDISURL && npm run start:dist"]
          {{- if .Values.ENABLE_RESOURCE_LIMIT }}
          resources:
            limits:
              cpu: {{ .Values.RESOURCE_CPU_LIMIT }}
              memory: {{ .Values.RESOURCE_MEM_LIMIT }}
            requests:
              cpu: {{ .Values.RESOURCE_CPU_REQUEST }}
              memory: {{ .Values.RESOURCE_MEM_REQUEST }}
          {{- end }}
          volumeMounts:
          - mountPath: "/app/server/storage/"
            name: botium-box-storage
          env:
            - name: BOTIUMBOX_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: botium*
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: BOTIUM_TEMPDIR
              value: /app/server/storage/botiumwork
            - name: BOTIUMBOX_QUEUE_CONCURRENCY
              value: "10"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_COACH
              value: "10"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_PERFORMANCE
              value: "0"
            - name: BOTIUMBOX_QUEUE_HEARTBEAT
              value: "0"
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
      volumes:
        - name: botium-box-storage
          persistentVolumeClaim:
            claimName: botium-box-storage
---
apiVersion: v1
kind: Service
metadata:
  name: box-agent
spec:
  clusterIP: None
  selector:
    name: box-agent
    app: botium-box
{{- if gt (int .Values.AGENTP_COUNT) 0 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: box-agentp
  labels:
    name: box-agentp
    app: botium-box
    tier: frontend
spec:
  serviceName: "box-agentp"
  replicas: {{ .Values.AGENTP_COUNT }}
  selector:
    matchLabels:
      name: box-agentp
  template:
    metadata:
      labels:
        name: box-agentp
        app: botium-box
        tier: frontend
    spec:
      {{- if .Values.ENABLE_AGENT_NODESELECTION}}
      nodeSelector:
        box-agent-type: performance
      {{- end }}
      initContainers:
        - name: box-agentp-chmod-er
          image: busybox:latest
          command:
          - /bin/chown
          - -R
          - "1000:1000"
          - /app/agent/storage
          volumeMounts:
          - mountPath: "/app/agent/storage"
            name: botium-box-storage
      containers:
        - name: box-agentp
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "./wait.sh -t $WAIT_TIMEOUT -e $BOTIUMBOX_QUEUE_REDISURL && npm run start:dist"]
          {{- if .Values.ENABLE_RESOURCE_LIMIT }}
          resources:
            limits:
              cpu: {{ .Values.RESOURCE_CPU_LIMIT }}
              memory: {{ .Values.RESOURCE_MEM_LIMIT }}
            requests:
              cpu: {{ .Values.RESOURCE_CPU_REQUEST }}
              memory: {{ .Values.RESOURCE_MEM_REQUEST }}
          {{- end }}
          volumeMounts:
          - mountPath: "/app/server/storage/"
            name: botium-box-storage
          env:
            - name: BOTIUMBOX_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: botium*
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: BOTIUM_TEMPDIR
              value: /app/server/storage/botiumwork
            - name: BOTIUMBOX_QUEUE_CONCURRENCY
              value: "0"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_COACH
              value: "0"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_PERFORMANCE
              value: "10"
            - name: BOTIUMBOX_QUEUE_HEARTBEAT
              value: "0"
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
      volumes:
        - name: botium-box-storage
          persistentVolumeClaim:
            claimName: botium-box-storage
---
apiVersion: v1
kind: Service
metadata:
  name: box-agentp
spec:
  clusterIP: None
  selector:
    name: box-agentp
    app: botium-box
{{- end }}

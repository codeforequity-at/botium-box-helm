{{- $managementApiKey := randAlphaNum 24 | nospace | quote -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: box-agent
  labels:
    name: box-agent
    app: botium-box
    tier: frontend
spec:
  {{- if eq .Values.UPGRADE_AGENTS false }}
  updateStrategy:
    type: OnDelete
    rollingUpdate: null
  {{- else }}
  updateStrategy:
    type: RollingUpdate
  {{- end }}
  serviceName: "box-agent"
  replicas: {{ .Values.AGENT_COUNT }}
  selector:
    matchLabels:
      name: box-agent
  template:
    metadata:
      labels:
        name: box-agent
        app: botium-box
        tier: frontend
    spec:
      {{- if .Values.ENABLE_AGENT_NODESELECTION}}
      nodeSelector:
        box-agent-type: common
      {{- end }}
      containers:
        - name: box-agent
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "node -r dotenv-flow/config dist/botium-box-agent.js"]
          ports:
            - name: box-m-4100
              containerPort: 4100
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: box-m-4100
                httpHeaders:
                  - name: ManagementApiKey
                    value: {{ $managementApiKey }}
          {{- if .Values.ENABLE_LIVENESS_PROBE }}
          livenessProbe:
            httpGet:
              path: /live
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 10
          {{- end }}
          readinessProbe:
            httpGet:
              path: /ready
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /startup
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            initialDelaySeconds: 10
            failureThreshold: 30
            periodSeconds: 10
          {{- if .Values.ENABLE_RESOURCE_LIMIT }}
          resources:
            limits:
              cpu: {{ .Values.RESOURCE_CPU_LIMIT }}
              memory: {{ .Values.RESOURCE_MEM_LIMIT }}
            requests:
              cpu: {{ .Values.RESOURCE_CPU_REQUEST }}
              memory: {{ .Values.RESOURCE_MEM_REQUEST }}
          {{- end }}
          volumeMounts:
          - mountPath: "/app/server/storage/"
            name: botium-box-storage
          - mountPath: "/app/server/storage/botiumwork/"
            name: botium-box-storage-botiumwork
          - mountPath: "/app/node-extra-ca-certs/"
            name: botium-box-node-extra-ca-certs
            readOnly: true
          env:
            - name: BOTIUMBOX_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: botium*
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: BOTIUM_TEMPDIR
              value: /app/server/storage/botiumwork
            {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
            - name: BOTIUMBOX_TERMINATION_GRACE_PERIOD
              value: "{{ .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}"
            {{- end }}
            - name: BOTIUMBOX_MANAGEMENT_API_PORT
              value: "4100"
            - name: BOTIUMBOX_MANAGEMENT_API_KEY
              value: {{ $managementApiKey }}
            - name: BOTIUMBOX_METRICS_ENABLE_BOX
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_BOX }}"
            - name: BOTIUMBOX_METRICS_ENABLE_NODEJS
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_NODEJS }}"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY
              value: "10"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_COACH
              value: "10"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_PERFORMANCE
              value: "0"
            - name: NODE_EXTRA_CA_CERTS
              value: /app/node-extra-ca-certs/certs.pem
            {{- if .Values.ENABLE_MULTI_TENANCY }}
            - name: BOTIUMBOX_QUEUE_HEARTBEAT
              value: "0"
            {{- else }}
            - name: BOTIUMBOX_QUEUE_HEARTBEAT
              value: "60000"
            {{- end }}
            - name: BOTIUMBOX_QUEUE_SETTINGS
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_SETTINGS
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
            - name: BOTIUMBOX_LOG_JSON
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_LOG_JSON
            - name: JOBDATA_MIN_SIZE_FOR_FILE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: JOBDATA_MIN_SIZE_FOR_FILE
            - name: JOBDATA_FILE_EXISTS_ATTEMPTS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: JOBDATA_FILE_EXISTS_ATTEMPTS
            - name: BOTIUMBOX_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_SENTRY_DSN                  
    {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
      terminationGracePeriodSeconds: {{ div .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD 1000 }}
    {{- end }}
      volumes:
        - name: botium-box-storage
          persistentVolumeClaim:
            claimName: botium-box-storage
        - name: botium-box-storage-botiumwork
          emptyDir: { }
        - name: botium-box-node-extra-ca-certs
          secret:
            secretName: botium-box-secrets
            items:
            - key: NODE_EXTRA_CA_CERTS
              path: certs.pem
---
apiVersion: v1
kind: Service
metadata:
  name: box-agent
spec:
  clusterIP: None
  selector:
    name: box-agent
    app: botium-box
{{- if gt (int .Values.AGENTP_COUNT) 0 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: box-agentp
  labels:
    name: box-agentp
    app: botium-box
    tier: frontend
spec:
  {{- if eq .Values.UPGRADE_AGENTS false }}
  updateStrategy:
    type: OnDelete
    rollingUpdate: null
  {{- else }}
  updateStrategy:
    type: RollingUpdate
  {{- end }}
  serviceName: "box-agentp"
  replicas: {{ .Values.AGENTP_COUNT }}
  selector:
    matchLabels:
      name: box-agentp
  template:
    metadata:
      labels:
        name: box-agentp
        app: botium-box
        tier: frontend
    spec:
      {{- if .Values.ENABLE_AGENT_NODESELECTION}}
      nodeSelector:
        box-agent-type: performance
      {{- end }}
      containers:
        - name: box-agentp
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "node -r dotenv-flow/config dist/botium-box-agent.js"]
          ports:
            - name: box-m-4100
              containerPort: 4100
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: box-m-4100
                httpHeaders:
                  - name: ManagementApiKey
                    value: {{ $managementApiKey }}
          {{- if .Values.ENABLE_LIVENESS_PROBE }}
          livenessProbe:
            httpGet:
              path: /live
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 10
          {{- end }}
          readinessProbe:
            httpGet:
              path: /ready
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 10
          startupProbe:
            httpGet:
              path: /startup
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            initialDelaySeconds: 10
            failureThreshold: 30
            periodSeconds: 10
          {{- if .Values.ENABLE_RESOURCE_LIMIT }}
          resources:
            limits:
              cpu: {{ .Values.RESOURCE_CPU_LIMIT }}
              memory: {{ .Values.RESOURCE_MEM_LIMIT }}
            requests:
              cpu: {{ .Values.RESOURCE_CPU_REQUEST }}
              memory: {{ .Values.RESOURCE_MEM_REQUEST }}
          {{- end }}
          volumeMounts:
          - mountPath: "/app/server/storage/"
            name: botium-box-storage
          - mountPath: "/app/server/storage/botiumwork/"
            name: botium-box-storage-botiumwork
          - mountPath: "/app/node-extra-ca-certs/"
            name: botium-box-node-extra-ca-certs
            readOnly: true
          env:
            - name: BOTIUMBOX_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: botium*
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: TESTSETDIR
              value: /app/server/storage/testsets
            - name: BOTIUM_TEMPDIR
              value: /app/server/storage/botiumwork
            {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
            - name: BOTIUMBOX_TERMINATION_GRACE_PERIOD
              value: "{{ .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}"
            {{- end }}
            - name: BOTIUMBOX_MANAGEMENT_API_PORT
              value: "4100"
            - name: BOTIUMBOX_MANAGEMENT_API_KEY
              value: {{ $managementApiKey }}
            - name: BOTIUMBOX_METRICS_ENABLE_BOX
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_BOX }}"
            - name: BOTIUMBOX_METRICS_ENABLE_NODEJS
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_NODEJS }}"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY
              value: "0"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_COACH
              value: "0"
            - name: BOTIUMBOX_QUEUE_CONCURRENCY_PERFORMANCE
              value: "10"
            - name: NODE_EXTRA_CA_CERTS
              value: /app/node-extra-ca-certs/certs.pem
            {{- if .Values.ENABLE_MULTI_TENANCY }}              
            - name: BOTIUMBOX_QUEUE_HEARTBEAT
              value: "0"
            {{- else }}
            - name: BOTIUMBOX_QUEUE_HEARTBEAT
              value: "60000"
            {{- end }}
            - name: BOTIUMBOX_QUEUE_SETTINGS
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_SETTINGS
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
            - name: BOTIUMBOX_LOG_JSON
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_LOG_JSON
            - name: JOBDATA_MIN_SIZE_FOR_FILE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: JOBDATA_MIN_SIZE_FOR_FILE
            - name: JOBDATA_FILE_EXISTS_ATTEMPTS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: JOBDATA_FILE_EXISTS_ATTEMPTS
            - name: BOTIUMBOX_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_SENTRY_DSN                                     
    {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
      terminationGracePeriodSeconds: {{ div .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD 1000 }}
    {{- end }}
      volumes:
        - name: botium-box-storage
          persistentVolumeClaim:
            claimName: botium-box-storage
        - name: botium-box-storage-botiumwork
          emptyDir: { }
        - name: botium-box-node-extra-ca-certs
          secret:
            secretName: botium-box-secrets
            items:
            - key: NODE_EXTRA_CA_CERTS
              path: certs.pem
---
apiVersion: v1
kind: Service
metadata:
  name: box-agentp
spec:
  clusterIP: None
  selector:
    name: box-agentp
    app: botium-box
{{- end }}

{{- $managementApiKey := randAlphaNum 24 | nospace | quote -}}
apiVersion: apps/v1
{{- if and (eq .Values.ENABLE_MULTI_TENANCY true) (eq .Values.FORCE_SINGLE_BOX_SERVER false) }}
kind: DaemonSet
{{- else }}
kind: Deployment
{{- end }}
metadata:
  name: box-server
  labels:
    name: box-server
    app: botium-box
    tier: frontend
spec:
  {{- if .Values.ENABLE_MULTI_TENANCY }}
  {{- if eq .Values.MAINTENANCE false }}
  updateStrategy:
    type: OnDelete
  {{- else }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  {{- end }}
  {{- else }}
  replicas: 1
  strategy:
    type: Recreate
  {{- end }}
  selector:
    matchLabels:
      name: box-server
      app: botium-box
  template:
    metadata:
      labels:
        name: box-server
        app: botium-box
        tier: frontend
    spec:
      {{- if .Values.ENABLE_AGENT_NODESELECTION }}
      nodeSelector:
        box-agent-type: common
      {{- end }}
      {{- if .Values.ENABLE_FIX_STORAGE_PERMISSIONS }}
      initContainers:
        - name: box-server-chmod-er-storage
          image: busybox:latest
          command:
          - /bin/chown
          - -R
          - "1000:1000"
          - /app/server/storage
          volumeMounts:
          - mountPath: "/app/server/storage"
            name: botium-box-storage
          - mountPath: "/app/server/storage/botiumwork"
            name: botium-box-storage-botiumwork
        {{- if .Values.ENABLE_MULTI_TENANCY }}
        - name: box-server-chmod-er-config
          image: busybox:latest
          command:
          - /bin/chown
          - -R
          - "1000:1000"
          - /app/prisma-config/
          volumeMounts:
          - mountPath: "/app/prisma-config/"
            name: botium-box-prisma-config-storage
        {{- end }}
      {{- end }}
      containers:
        - name: box-server
          imagePullPolicy: Always
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-server:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-server:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          command: ["/bin/sh"]
          {{- if .Values.ENABLE_MULTI_TENANCY }}
          args: ["-c", "node -r dotenv-flow/config dist/botium-box-server.js"]
          {{- else }}
          args: ["-c", "npm run prisma-deploy && npm run prisma-seed && node -r dotenv-flow/config dist/botium-box-server.js"]
          {{- end }}
          ports:
            - name: box-4000
              containerPort: 4000
            - name: box-m-4100
              containerPort: 4100
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: box-m-4100
                httpHeaders:
                  - name: ManagementApiKey
                    value: {{ $managementApiKey }}
          {{- if .Values.ENABLE_LIVENESS_PROBE }}
          livenessProbe:
            httpGet:
              path: /live
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 5
          {{- end }}
          readinessProbe:
            httpGet:
              path: /ready
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /startup
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            initialDelaySeconds: 30
            failureThreshold: 60
            periodSeconds: 30
            timeoutSeconds: 5
          volumeMounts:
          - mountPath: "/app/server/storage/"
            name: botium-box-storage
          - mountPath: "/app/server/storage/botiumwork/"
            name: botium-box-storage-botiumwork
          {{- if .Values.ENABLE_MULTI_TENANCY }}
          - mountPath: "/app/prisma-config/"
            name: botium-box-prisma-config-storage
          {{- end }}
          env:
            - name: DEBUG
              value: botium*
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: TESTSETDIR
              value: /app/server/storage/testsets
            {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
            - name: BOTIUMBOX_TERMINATION_GRACE_PERIOD
              value: "{{ .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}"
            {{- end }}
            - name: BOTIUMBOX_MANAGEMENT_API_PORT
              value: "4100"
            - name: BOTIUMBOX_MANAGEMENT_API_KEY
              value: {{ $managementApiKey }}
            - name: BOTIUMBOX_METRICS_PUBLISH
              value: "{{ .Values.BOTIUMBOX_METRICS_PUBLISH }}"
            - name: BOTIUMBOX_METRICS_ENABLE_BOX
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_BOX }}"
            - name: BOTIUMBOX_METRICS_ENABLE_NODEJS
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_NODEJS }}"
            {{- if .Values.ENABLE_MULTI_TENANCY }}
            - name: BOTIUMBOX_SCANFORTESTSETS
              value: ""
            {{- else }}
            - name: BOTIUMBOX_SCANFORTESTSETS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_SCANFORTESTSETS
            {{- end }}
            - name: BOTIUM_TEMPDIR
              value: /app/server/storage/botiumwork
            - name: NODE_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: NODE_OPTIONS
            - name: BOTIUMBOX_AGENT_LIST
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_AGENT_LIST
            - name: CHOKIDAR_USEPOLLING
              value: "1"
            - name: BOTIUMBOX_MAX_EXECUTION_INTERVAL_MINUTES
              value: "10"
            - name: JWT_EXPIRY_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: JWT_EXPIRY_MINUTES
            {{- if .Values.ENABLE_MULTI_TENANCY }}
            - name: PRISMA_CONFIG_FILE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: PRISMA_CONFIG_FILE
            - name: BOTIUMBOX_FQDN_CLIENTID_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_FQDN_CLIENTID_PREFIX
            - name: BOTIUMBOX_FQDN_CLIENTID_SUFFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_FQDN_CLIENTID_SUFFIX
            {{- else }}
            - name: BOTIUMBOX_FQDN
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_FQDN
            {{- end }}
            {{- if .Values.ENABLE_PROVISIONER }}
            - name: ENABLE_PRISMA_CONFIG_FILE_WATCHER
              value: "0"
            - name: ENABLE_PRISMA_CONFIG_REDIS_WATCHER
              value: "1"
            {{- else }}
            - name: ENABLE_PRISMA_CONFIG_FILE_WATCHER
              value: "1"
            - name: ENABLE_PRISMA_CONFIG_REDIS_WATCHER
              value: "0"
            {{- end }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: JWT_SECRET
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: DATABASE_URL
            - name: BOTIUMBOX_PRISMA_CHECK_INTERVAL_SECONDS
              value: "{{ .Values.BOTIUMBOX_PRISMA_CHECK_INTERVAL_SECONDS }}"
            - name: BOTIUMBOX_PRISMA_TIMEOUT_SECONDS
              value: "{{ .Values.BOTIUMBOX_PRISMA_TIMEOUT_SECONDS }}"
            - name: BOTIUMBOX_PRISMA_LIFETIME_SECONDS
              value: "{{ .Values.BOTIUMBOX_PRISMA_LIFETIME_SECONDS }}"                  
            - name: LICENSE_KEY
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: LICENSE_KEY
            - name: BOTIUMBOX_QUEUE_SETTINGS
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_SETTINGS
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
            - name: COACH_WORKER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: COACH_WORKER_ENDPOINT
            - name: COACH_WORKER_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: COACH_WORKER_APIKEY
            - name: BOTIUMBOX_AUDIT_URL
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_AUDIT_URL
            - name: SPEECH_PROCESSING_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SPEECH_PROCESSING_ENDPOINT
            - name: SPEECH_PROCESSING_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SPEECH_PROCESSING_APIKEY
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_HOST
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_PORT
            - name: SMTP_SECURE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_SECURE
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_USER
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_PASSWORD
            - name: BOTIUMBOX_CLEANUP_JOB_INTERVAL_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_CLEANUP_JOB_INTERVAL_MINUTES
            - name: BOTIUMBOX_KEEP_SUCCESS_SCREENSHOTS_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_SUCCESS_SCREENSHOTS_DAYS
            - name: BOTIUMBOX_KEEP_SUCCESS_CONVERSATION_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_SUCCESS_CONVERSATION_DAYS
            - name: BOTIUMBOX_KEEP_FAILED_SCREENSHOTS_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_FAILED_SCREENSHOTS_DAYS
            - name: BOTIUMBOX_KEEP_FAILED_CONVERSATION_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_FAILED_CONVERSATION_DAYS
            - name: BOTIUMBOX_KEEP_COACH_DETAILS_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_COACH_DETAILS_DAYS
            {{- if .Values.ACTIVATE_ZAP }}
            - name: ZAP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: ZAP_ENDPOINT
            {{- end }}
            - name: BOTIUMBOX_SMARTLOOK_KEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_SMARTLOOK_KEY
            - name: BOTIUMBOX_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_SENTRY_DSN
            - name: BOTIUMBOX_PASSPORT_ADMINPASSWORD_HASH
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_PASSPORT_ADMINPASSWORD_HASH
            - name: BOTIUMBOX_ADMIN_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_ADMIN_APIKEY
            - name: GOOGLE_TRANSLATE_CLIENT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: GOOGLE_TRANSLATE_CLIENT_EMAIL
            - name: GOOGLE_TRANSLATE_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: GOOGLE_TRANSLATE_PRIVATE_KEY
            - name: OPENAI_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: OPENAI_APIKEY
            - name: OPENAI_RATE_BY_MINUTE
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: OPENAI_RATE_BY_MINUTE
            - name: BOTIUMBOX_LOG_JSON
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_LOG_JSON
            {{- if .Values.ENABLE_BACKEND_PROCESSING }}
            - name: BOTIUMBOX_LAUNCH_BACKEND_PROCESSING
              value: "0"
            - name: BOTIUMBOX_LAUNCH_CLIENT_FACING
              value: "1"
            {{- end }}
    {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
      terminationGracePeriodSeconds: {{ div .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD 1000 }}
    {{- end }}
      volumes:
        - name: botium-box-storage
          persistentVolumeClaim:
            claimName: botium-box-storage
        - name: botium-box-storage-botiumwork
          emptyDir: { }
        {{- if .Values.ENABLE_MULTI_TENANCY }}
        - name: botium-box-prisma-config-storage
          persistentVolumeClaim:
            claimName: botium-box-prisma-config-storage
        {{- end }}
{{- if .Values.ENABLE_BACKEND_PROCESSING }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: box-server-backend
  labels:
    name: box-server-backend
    app: botium-box
    tier: backend
spec:
  replicas: 1
  {{- if eq .Values.MAINTENANCE false }}
  updateStrategy:
    type: OnDelete
  {{- else }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  {{- end }}
  selector:
    matchLabels:
      name: box-server-backend
      app: botium-box
  template:
    metadata:
      labels:
        name: box-server-backend
        app: botium-box
        tier: backend
    spec:
      containers:
        - name: box-server-backend
          imagePullPolicy: Always
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-server:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-server:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          command: ["/bin/sh"]
          args: ["-c", "node -r dotenv-flow/config dist/botium-box-server.js"]
          ports:
            - name: box-m-4100
              containerPort: 4100
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: box-m-4100
                httpHeaders:
                  - name: ManagementApiKey
                    value: {{ $managementApiKey }}
          {{- if .Values.ENABLE_LIVENESS_PROBE }}
          livenessProbe:
            httpGet:
              path: /live
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 5
          {{- end }}
          readinessProbe:
            httpGet:
              path: /ready
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            failureThreshold: 3
            periodSeconds: 30
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /startup
              port: box-m-4100
              httpHeaders:
                - name: ManagementApiKey
                  value: {{ $managementApiKey }}
            initialDelaySeconds: 30
            failureThreshold: 60
            periodSeconds: 30
            timeoutSeconds: 5
          volumeMounts:
          - mountPath: "/app/server/storage/"
            name: botium-box-storage
          - mountPath: "/app/server/storage/botiumwork/"
            name: botium-box-storage-botiumwork
          {{- if .Values.ENABLE_MULTI_TENANCY }}
          - mountPath: "/app/prisma-config/"
            name: botium-box-prisma-config-storage
          {{- end }}
          env:
            - name: DEBUG
              value: botium*
            - name: RESOURCESDIR
              value: /app/server/storage/resources
            - name: TESTSETDIR
              value: /app/server/storage/testsets
            {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
            - name: BOTIUMBOX_TERMINATION_GRACE_PERIOD
              value: "{{ .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}"
            {{- end }}
            - name: BOTIUMBOX_MANAGEMENT_API_PORT
              value: "4100"
            - name: BOTIUMBOX_MANAGEMENT_API_KEY
              value: {{ $managementApiKey }}
            - name: BOTIUMBOX_METRICS_PUBLISH
              value: "{{ .Values.BOTIUMBOX_METRICS_PUBLISH }}"
            - name: BOTIUMBOX_METRICS_ENABLE_BOX
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_BOX }}"
            - name: BOTIUMBOX_METRICS_ENABLE_NODEJS
              value: "{{ .Values.BOTIUMBOX_METRICS_ENABLE_NODEJS }}"
            {{- if .Values.ENABLE_MULTI_TENANCY }}
            - name: BOTIUMBOX_SCANFORTESTSETS
              value: ""
            {{- else }}
            - name: BOTIUMBOX_SCANFORTESTSETS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_SCANFORTESTSETS
            {{- end }}
            - name: BOTIUM_TEMPDIR
              value: /app/server/storage/botiumwork
            - name: NODE_OPTIONS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: NODE_OPTIONS
            - name: BOTIUMBOX_AGENT_LIST
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_AGENT_LIST
            - name: CHOKIDAR_USEPOLLING
              value: "1"
            - name: BOTIUMBOX_MAX_EXECUTION_INTERVAL_MINUTES
              value: "10"
            - name: JWT_EXPIRY_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: JWT_EXPIRY_MINUTES
            {{- if .Values.ENABLE_MULTI_TENANCY }}
            - name: PRISMA_CONFIG_FILE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: PRISMA_CONFIG_FILE
            - name: BOTIUMBOX_FQDN_CLIENTID_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_FQDN_CLIENTID_PREFIX
            - name: BOTIUMBOX_FQDN_CLIENTID_SUFFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_FQDN_CLIENTID_SUFFIX
            {{- else }}
            - name: BOTIUMBOX_FQDN
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_FQDN
            {{- end }}
            {{- if .Values.ENABLE_PROVISIONER }}
            - name: ENABLE_PRISMA_CONFIG_FILE_WATCHER
              value: "0"
            - name: ENABLE_PRISMA_CONFIG_REDIS_WATCHER
              value: "1"
            {{- else }}
            - name: ENABLE_PRISMA_CONFIG_FILE_WATCHER
              value: "1"
            - name: ENABLE_PRISMA_CONFIG_REDIS_WATCHER
              value: "0"
            {{- end }}
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: JWT_SECRET
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: DATABASE_URL
            - name: BOTIUMBOX_PRISMA_CHECK_INTERVAL_SECONDS
              value: "{{ .Values.BOTIUMBOX_PRISMA_CHECK_INTERVAL_SECONDS }}"
            - name: BOTIUMBOX_PRISMA_TIMEOUT_SECONDS
              value: "{{ .Values.BOTIUMBOX_PRISMA_TIMEOUT_SECONDS }}"
            - name: BOTIUMBOX_PRISMA_LIFETIME_SECONDS
              value: "{{ .Values.BOTIUMBOX_PRISMA_LIFETIME_SECONDS }}"   
            - name: LICENSE_KEY
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: LICENSE_KEY
            - name: BOTIUMBOX_QUEUE_SETTINGS
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_SETTINGS
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
            - name: COACH_WORKER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: COACH_WORKER_ENDPOINT
            - name: COACH_WORKER_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: COACH_WORKER_APIKEY
            - name: BOTIUMBOX_AUDIT_URL
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_AUDIT_URL
            - name: SPEECH_PROCESSING_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SPEECH_PROCESSING_ENDPOINT
            - name: SPEECH_PROCESSING_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SPEECH_PROCESSING_APIKEY
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_HOST
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_PORT
            - name: SMTP_SECURE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_SECURE
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_USER
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_PASSWORD
            - name: BOTIUMBOX_CLEANUP_JOB_INTERVAL_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_CLEANUP_JOB_INTERVAL_MINUTES
            - name: BOTIUMBOX_KEEP_SUCCESS_SCREENSHOTS_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_SUCCESS_SCREENSHOTS_DAYS
            - name: BOTIUMBOX_KEEP_SUCCESS_CONVERSATION_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_SUCCESS_CONVERSATION_DAYS
            - name: BOTIUMBOX_KEEP_FAILED_SCREENSHOTS_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_FAILED_SCREENSHOTS_DAYS
            - name: BOTIUMBOX_KEEP_FAILED_CONVERSATION_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_FAILED_CONVERSATION_DAYS
            - name: BOTIUMBOX_KEEP_COACH_DETAILS_DAYS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_KEEP_COACH_DETAILS_DAYS
            {{- if .Values.ACTIVATE_ZAP }}
            - name: ZAP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: ZAP_ENDPOINT
            {{- end }}
            - name: BOTIUMBOX_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_SENTRY_DSN
            - name: GOOGLE_TRANSLATE_CLIENT_EMAIL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: GOOGLE_TRANSLATE_CLIENT_EMAIL
            - name: GOOGLE_TRANSLATE_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: GOOGLE_TRANSLATE_PRIVATE_KEY
            - name: OPENAI_APIKEY
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: OPENAI_APIKEY
            - name: OPENAI_RATE_BY_MINUTE
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: OPENAI_RATE_BY_MINUTE
            - name: BOTIUMBOX_LOG_JSON
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_LOG_JSON
            - name: BOTIUMBOX_LAUNCH_BACKEND_PROCESSING
              value: "1"
            - name: BOTIUMBOX_LAUNCH_CLIENT_FACING
              value: "0"
    {{- if .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD }}
      terminationGracePeriodSeconds: {{ div .Values.BOTIUMBOX_TERMINATION_GRACE_PERIOD 1000 }}
    {{- end }}
      volumes:
        - name: botium-box-storage
          persistentVolumeClaim:
            claimName: botium-box-storage
        - name: botium-box-storage-botiumwork
          emptyDir: { }
        {{- if .Values.ENABLE_MULTI_TENANCY }}
        - name: botium-box-prisma-config-storage
          persistentVolumeClaim:
            claimName: botium-box-prisma-config-storage
        {{- end }}
{{- end }}
{{- if .Values.ENABLE_MULTI_TENANCY }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: box-server-shell
  labels:
    name: box-server-shell
    app: botium-box-shell
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: box-server-shell
      app: botium-box-shell
  template:
    metadata:
      labels:
        name: box-server-shell
        app: botium-box-shell
    spec:
      {{- if .Values.ENABLE_AGENT_NODESELECTION}}
      nodeSelector:
        box-agent-type: common
      {{- end }}
      containers:
        - name: box-server
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-server:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-server:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "
            {{- if .Values.ENABLE_MULTI_TENANCY }}
              if test -f /app/prisma-config/prisma-config.json; then
                echo 'Creating empty prisma-config skipped, file exists';
              else
                echo 'Creating empty prisma-config.json' &&
                echo {} > /app/prisma-config/prisma-config.json;
              fi &&
            {{- end }}
            echo 'cd /app/server/' > /root/.bashrc &&
            cd /app/server &&
            while :; do echo 'Press <CTRL+C> to exit.'; sleep 10; done"
          ]
          volumeMounts:
          - mountPath: "/app/storage/"
            name: botium-box-storage
          {{- if .Values.ENABLE_MULTI_TENANCY }}
          - mountPath: "/app/prisma-config/"
            name: botium-box-prisma-config-storage
          {{- end }}
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          env:
            - name: DEBUG
              value: botium*
            - name: NODE_PATH
              value: /app/server/node_modules
            - name: RESOURCESDIR
              value: /app/storage/resources
            - name: BOTIUMBOX_SCANFORTESTSETS
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_SCANFORTESTSETS
            - name: PRISMA_BIN_FILE
              value: /app/server/node_modules/.bin/prisma
            - name: PRISMA_CONFIG_FILE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: PRISMA_CONFIG_FILE
            - name: LICENSE_KEY
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: LICENSE_KEY
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: DATABASE_URL
            - name: BOTIUMBOX_QUEUE_SETTINGS
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_SETTINGS
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
            - name: BOTIUMBOX_LOG_JSON
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_LOG_JSON
      volumes:
        - name: botium-box-storage
          persistentVolumeClaim:
            claimName: botium-box-storage
        {{- if .Values.ENABLE_MULTI_TENANCY }}
        - name: botium-box-prisma-config-storage
          persistentVolumeClaim:
            claimName: botium-box-prisma-config-storage
        {{- end }}
{{- end }}
{{- if .Values.INSTALL_INGRESS }}
{{- if .Values.ENABLE_MULTI_TENANCY }}
{{- if .Values.USE_LETSENCRYPT }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: box-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: {{ .Values.FQDN }}-letsencrypt-prod
spec:
  tls:
  - hosts:
    - {{ .Values.FQDN }}
    - '*.{{ .Values.FQDN }}'
    secretName: {{ .Values.FQDN }}.botiumbox-tls
  rules:
  - host: '*.{{ .Values.FQDN }}'
    http:
      paths:
      - path: /
        backend:
          serviceName: box-server
          servicePort: 4000
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: {{ .Values.FQDN }}-letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.LETS_ENCRYPT_EMAIL }}
    privateKeySecretRef:
      name: {{ .Values.FQDN }}-letsencrypt-prod
    solvers:
    - selector:
        dnsZones:
          - '*.{{ .Values.FQDN }}'
      dns01:
        route53:
          region: eu-west-1
          accessKeyID: "{{ .Values.AWS_ACCESS_KEY_ID }}"
          secretAccessKeySecretRef:
            name: botium-box-secrets
            key: AWS_SECRET_ACCESS_KEY
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: {{ .Values.FQDN }}
spec:
  secretName: {{ .Values.FQDN }}.botiumbox-tls
  issuerRef:
    name: {{ .Values.FQDN }}-letsencrypt-prod
    kind: Issuer
  dnsNames:
    - '*.{{ .Values.FQDN }}'
  acme:
    config:
      - dns01:
          provider: route53
        domains:
          - '*.{{ .Values.FQDN }}'
{{- end}}
{{- if .Values.USE_AWS_ALB}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: box-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.AWS_ALB_CERT_ARN }}
spec:
  rules:
  - host: '*.{{ .Values.FQDN }}'
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: box-server
            port:
              number: 4000
{{- end }}
{{- else}}
{{- if .Values.USE_LETSENCRYPT }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: box-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    rancher.io/globalDNS.hostname: {{ .Values.FQDN }}
    cert-manager.io/cluster-issuer: {{ .Values.FQDN }}-letsencrypt-prod
    nginx.ingress.kubernetes.io/server-snippet: |
      ssl_stapling on;
      ssl_stapling_verify on;
spec:
  tls:
  - hosts:
    - {{ .Values.FQDN }}
    secretName: {{ .Values.FQDN }}.botiumbox-tls
  rules:
  - host: {{ .Values.FQDN }}
    http:
      paths:
      - path: /
        backend:
          serviceName: box-server
          servicePort: 4000
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: {{ .Values.FQDN }}-letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: {{ .Values.LETS_ENCRYPT_EMAIL }}
    privateKeySecretRef:
      name: {{ .Values.FQDN }}-letsencrypt-prod
    solvers:
    - selector: {}
      http01:
        ingress:
          class: nginx
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: {{ .Values.FQDN }}.botiumbox
spec:
  secretName: {{ .Values.FQDN }}.botiumbox-tls
  issuerRef:
    name: {{ .Values.FQDN }}-letsencrypt-prod
  commonName: {{ .Values.FQDN }}.botiumbox
  dnsNames:
  - {{ .Values.FQDN }}
{{- end }}
{{- if .Values.USE_AWS_ALB}}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: box-ingress
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.AWS_ALB_CERT_ARN }}
spec:
  rules:
  - host: {{ .Values.FQDN }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: box-server
            port:
              number: 4000
{{- end }}
{{- end }}
{{- end }}

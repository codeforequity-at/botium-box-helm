apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: box-agent
  labels:
    name: box-agent
    app: botium-box
    tier: frontend
spec:
  serviceName: "box-agent"
  replicas: {{ .Values.AGENT_COUNT }}
  selector:
    matchLabels:
      name: box-agent
  template:
    metadata:
      labels:
        name: box-agent
        app: botium-box
        tier: frontend
    spec:
      containers:
        - name: box-agent
          {{- if eq .Values.CONTAINER_REGISTRY "" }}
          image: botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- else }}
          image: {{ .Values.CONTAINER_REGISTRY }}/botium/botium-box-agent:{{ .Values.BOTIUM_BOX_VERSION }}
          {{- end }}
          command: ["/bin/sh"]
          args: ["-c", "./wait-for-it.sh -s -t 120 {{ .Values.REDIS_SERVICE }}:6379 -- npm run start:dist"]
          volumeMounts:
          - mountPath: "/app/agent/storage/"
            name: botium-box-mini-storage
          env:
            - name: BOTIUMBOX_AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DEBUG
              value: botium*
            - name: RESOURCESDIR
              value: /app/agent/storage/resources
            - name: TEMPDIR
              value: /app/agent/storage/botiumwork
            - name: BOTIUMBOX_QUEUE_CONCURRENCY
              value: "10"
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: BOTIUMBOX_QUEUE_PREFIX
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_PREFIX
      volumes:
        - name: botium-box-mini-storage
          persistentVolumeClaim:
            claimName: botium-box-mini-storage
---
apiVersion: v1
kind: Service
metadata:
  name: box-agent
spec:
  clusterIP: None
  selector:
    name: box-agent
    app: botium-box

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: box-server
  labels:
    name: box-server
    app: botium-box
    tier: frontend
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: box-server
        app: botium-box
        tier: frontend
    spec:
      securityContext:
        runAsUser: 0
        fsGroup: 0
      containers:
        - name: box-server
          image: botium/botium-box-server:{{ .Values.BOTIUM_BOX_VERSION }}
          imagePullPolicy: Always
          command: ["/bin/sh"]
          args: ["-c", "node -r dotenv-flow/config dist/botium-box-server.js"]
          ports:
            - name: box-4000
              containerPort: 4000
          volumeMounts:
          - mountPath: "/app/storage/"
            name: botium-box-mini-storage
          - mountPath: "/app/prisma-config/"
            name: botium-box-mini-prisma-config-storage
          env:
            - name: DEBUG
              value: botium*
            - name: TESTSETDIR
              value: /app/server/testsets
            - name: TESTSETDIR_PUBLIC
              value: /app/server/testsets
            - name: TEMPDIR
              value: /app/server/botiumwork
            - name: BOTIUMBOX_SCANFORTESTSETS
              value: /app/datasets-mini
            - name: BOTIUMBOX_AGENT_LIST
              value: agent-1,agent-2,agent-3,agent-4,agent-5,agent-6,agent-7,agent-8,agent-9,agent-10,agent-11,agent-12,agent-13,agent-14,agent-15,agent-16,agent-17,agent-18,agent-19,agent-20
            - name: PRISMA_CONFIG_FILE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: PRISMA_CONFIG_FILE
            - name: LICENSE_KEY
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: LICENSE_KEY
            - name: BOTIUMBOX_QUEUE_REDISURL
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: BOTIUMBOX_QUEUE_REDISURL
            - name: COACH_WORKER_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: COACH_WORKER_ENDPOINT
            - name: PRISMA_MANAGEMENT_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: PRISMA_MANAGEMENT_API_SECRET
            - name: SMTP_HOST
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_HOST
            - name: SMTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_PORT
            {{- if .Values.SMTP_SECURE }}
            - name: SMTP_SECURE
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: SMTP_SECURE
            {{- end }}
            - name: SMTP_USER
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_USER
            - name: SMTP_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: botium-box-secrets
                  key: SMTP_PASSWORD
            {{- if .Values.INSTALL_ZAP }}
            - name: ZAP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: botium-box-configmap
                  key: ZAP_ENDPOINT
            {{- end }}
      volumes:
        - name: botium-box-mini-storage
          persistentVolumeClaim:
            claimName: botium-box-mini-storage
        - name: botium-box-mini-prisma-config-storage
          persistentVolumeClaim:
            claimName: botium-box-mini-prisma-config-storage
---
apiVersion: v1
kind: Service
metadata:
  name: box-server
spec:
  ports:
    - port: 4000
  selector:
    name: box-server
    app: botium-box
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: box-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    rancher.io/globalDNS.hostname: '*.{{ .Values.SHORTNAME }}.botiumbox.com'
    cert-manager.io/cluster-issuer: botium-box-{{ .Values.SHORTNAME }}-letsencrypt-prod
spec:
  tls:
  - hosts:
    - '*.{{ .Values.SHORTNAME }}.botiumbox.com'
    secretName: {{ .Values.SHORTNAME }}.botiumbox-com-tls
  rules:
  - host: '*.{{ .Values.SHORTNAME }}.botiumbox.com'
    http:
      paths:
      - path: /
        backend:
          serviceName: box
          servicePort: 4000
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: botium-box-{{ .Values.SHORTNAME }}-letsencrypt-prod
spec:
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    email: florian.treml@botium.at
    privateKeySecretRef:
      name: botium-box-{{ .Values.SHORTNAME }}-letsencrypt-prod
    dns01:
      providers:
        - name: aws-dns
          route53:
            region: eu-west-1
            accessKeyIDSecretRef:
              name: botium-box-secrets
              key: AWS_ACCESS_KEY_ID
            secretAccessKeySecretRef:
              name: botium-box-secrets
              key: AWS_SECRET_ACCESS_KEY
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: botium-box-{{ .Values.SHORTNAME }}.botiumbox-com
spec:
  secretName: botium-box-{{ .Values.SHORTNAME }}.botiumbox-com-tls
  issuerRef:
    name: botium-box-{{ .Values.SHORTNAME }}-letsencrypt-prod
    kind: Issuer
  commonName: '*.{{ .Values.SHORTNAME }}.botiumbox.com'
  dnsNames:
  - {{ .Values.SHORTNAME }}.botiumbox.com
  - '*.{{ .Values.SHORTNAME }}.botiumbox.com'
  acme:
    config:
    - dns01:
        provider: aws-dns
      domains:
      - {{ .Values.SHORTNAME }}.botiumbox.com
      - '*.{{ .Values.SHORTNAME }}.botiumbox.com'
